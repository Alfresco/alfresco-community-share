<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <artifactId>alfresco-governance-services-community-share</artifactId>
   <packaging>amp</packaging>
   <name>Alfresco Governance Services Community Share</name>
   <description>Alfresco Governance Services Share Extension</description>

   <parent>
      <groupId>org.alfresco</groupId>
      <artifactId>alfresco-governance-services-community-share-parent</artifactId>
      <version>12.18</version>
   </parent>

   <properties>
      <alfresco.repo.url>http://localhost:8080/alfresco</alfresco.repo.url>

      <image.name>alfresco/alfresco-governance-share-community-base</image.name>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>share</artifactId>
         <version>${project.version}</version>
         <classifier>classes</classifier>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-all</artifactId>
         <scope>test</scope>
      </dependency>

      <!-- XML jars removed in Java 11 but are provided by alfresco-content-services -->
      <dependency>
         <groupId>jakarta.xml.bind</groupId>
         <artifactId>jakarta.xml.bind-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jaxb</groupId>
         <artifactId>jaxb-runtime</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.bcel</groupId>
         <artifactId>bcel</artifactId>
         <scope>provided</scope>
      </dependency>
   </dependencies>

   <build>
      <sourceDirectory>source/java</sourceDirectory>
      <resources>
         <resource>
            <directory>config</directory>
            <filtering>true</filtering>
         </resource>
         <resource>
            <directory>source/web</directory>
         </resource>
      </resources>

      <plugins>
         <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>yuicompressor-maven-plugin</artifactId>
         </plugin>

         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>add-test-source</id>
                  <goals>
                     <goal>add-test-source</goal>
                  </goals>
                  <configuration>
                     <sources>
                        <source>unit-test/java</source>
                     </sources>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <includes>
                  <include>**/*UnitTest.java</include>
               </includes>
            </configuration>
         </plugin>

         <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <move todir="${project.build.directory}/${project.build.finalName}/config/alfresco">
                           <fileset dir="${project.build.outputDirectory}/alfresco" />
                        </move>
                        <move todir="${project.build.directory}/${project.build.finalName}/web/components">
                           <fileset dir="${project.build.outputDirectory}/components" />
                        </move>
                        <move todir="${project.build.directory}/${project.build.finalName}/web/rm">
                           <fileset dir="${project.build.outputDirectory}/rm" />
                        </move>
                        <move todir="${project.build.directory}/${project.build.finalName}/web/js">
                           <fileset dir="${project.build.outputDirectory}/js" />
                        </move>
                        <move file="${project.build.directory}/${project.build.finalName}/config/alfresco/module/org_alfresco_module_rm_share/file-mapping.properties" todir="${project.build.directory}/${project.build.finalName}" />
                        <move file="${project.build.directory}/${project.build.finalName}/config/alfresco/module/org_alfresco_module_rm_share/module.properties" todir="${project.build.directory}/${project.build.finalName}" />
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.alfresco.maven.plugin</groupId>
            <artifactId>alfresco-maven-plugin</artifactId>
            <extensions>true</extensions>
         </plugin>

         <!-- License header generation -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <configuration>
               <licenseName>alfresco_community</licenseName>
               <roots>
                  <root>source/java</root>
                  <root>config</root>
                  <root>source/web</root>
                  <root>unit-test/java</root>
               </roots>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>build-docker-images</id>
         <!-- builds "image:latest" locally -->
         <build>
            <plugins>
               <plugin>
                  <groupId>io.fabric8</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <configuration>
                     <images>
                        <image>
                           <name>${image.name}:${image.tag}</name>
                        </image>
                     </images>
                  </configuration>
                  <executions>
                     <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                           <goal>build</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>push-docker-images</id>
         <!-- publishes "image:latest" on Quay -->
         <build>
            <plugins>
               <plugin>
                  <groupId>io.fabric8</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <configuration>
                     <images>
                        <!-- Quay image -->
                        <image>
                           <name>${image.name}:${image.tag}</name>
                           <registry>${image.registry}</registry>
                        </image>
                        <!-- DockerHub image -->
                        <!--<image>-->
                        <!--   <name>${image.name}:${image.tag}</name>-->
                        <!--</image>-->
                     </images>
                  </configuration>
                  <executions>
                     <execution>
                        <id>build-push-image</id>
                        <phase>install</phase>
                        <goals>
                           <goal>build</goal>
                           <goal>push</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
