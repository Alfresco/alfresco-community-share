name: alfresco_enterprise_share

on:
  push:
    branches:
      - "fix/**"
      - "feature/**"
  pull_request:
    branches:
      - master
      - "release/**"
  workflow_call:
  workflow_dispatch:
    inputs:
      commitMessage:
        description: Enter the Commit Message
        required: true
env:
  SYNC_TAG_NAME: 3.4.0-A1
  HOSTED_ZONE: dev.envalfresco.com
  KEEP_ENV: false
  TAS_SCRIPTS: ../alfresco-community-repo/packaging/tests/scripts
  TAS_ENVIRONMENT: ./packaging/tests/environment
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  BRANCH_NAME: ${{ github.ref_name }}
  GIT_PASSWORD: ${{ secrets.BOT_GITHUB_TOKEN }}
  GIT_EMAIL: ${{ secrets.BOT_GITHUB_EMAIL }}
  GIT_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
  S3_BUCKET_REGION: "us-east-1"
  S3_BUCKET2_NAME: "travis-ags-worm-b2"
  ALFRESCO_URL: "http://localhost:8080/alfresco/"
  SHARE_URL: "http://localhost:8181/share"
  DISPLAY: :99.0
  WEBDRIVER_ARGUMENTS: '-Dwebdriver.local.grid=true -Dwebdriver.browser=RemoteFireFox -Dwebdriver.localGrid=false -Dorg.alfresco.rm.timeout_seconds.MEDIUM=30'
  ALF_PWD: ${{ secrets.ALF_PWD }}
  ARTIFACTS_BUCKET: ${{ secrets.ARTIFACTS_BUCKET }}
  ARTIFACTS_KEY: ${{ secrets.ARTIFACTS_KEY }}
  ARTIFACTS_SECRET: ${{ secrets.ARTIFACTS_SECRET }}
  MASTER_URL: ${{ secrets.MASTER_URL }}
  SSL_CERT: ${{ secrets.SSL_CERT }}
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
  CLUSTER_NAME: "acs-cluster"
  RANCHER2_URL: ${{ secrets.RANCHER2_URL }}
  RANCHER2_ACCESS_KEY: ${{ secrets.RANCHER2_ACCESS_KEY }}
  RANCHER2_SECRET_KEY: ${{ secrets.RANCHER2_SECRET_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ACS_CLUSTER_AWS_ACCESS_KEY_ID: ${{ secrets.ACS_CLUSTER_AWS_ACCESS_KEY_ID }}
  ACS_CLUSTER_AWS_SECRET_ACCESS_KEY: ${{ secrets.ACS_CLUSTER_AWS_SECRET_ACCESS_KEY }}
  AGS_AWS_ACCESS_KEY_ID: ${{ secrets.AGS_AWS_ACCESS_KEY_ID }}
  AGS_AWS_SECRET_ACCESS_KEY: ${{ secrets.AGS_AWS_SECRET_ACCESS_KEY }}
  GITHUB_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
  GITHUB_ACTIONS_DEPLOY_TIMEOUT: 90
  SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}

jobs:
  lint:
    if: (!contains(github.event.head_commit.message, '[no lint]') && inputs.commitMessage != '[no lint]')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.34.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@v1.4.0

  build:
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.head_commit.message, '[no build]') &&
      inputs.commitMessage != '[no build]' &&
      !contains(github.event.head_commit.message, '[force]') &&
      inputs.commitMessage != '[force]'
    needs: lint
    strategy:
      matrix:
        stage: [ source_clear ]
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.34.0
      - name: "Init"
        run: bash scripts/travis/init.sh
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: "Prepare before Test"
        run: |
          export TAG_NAME="$(echo "${BRANCH_NAME}" | tr / - )"
          export NAMESPACE="travis-share-$GITHUB_RUN_NUMBER"
          pip3 install requests pytest==6.2.4 pytest-testinfra==6.3.0 jmespath==0.10.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.34.0
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: bash scripts/travis/build.sh
      - name: Run ${{ matrix.stage }}
        if: ${{ ( matrix.stage != 'source_clear' && github.ref_name != 'company_release') || matrix.stage == 'source_clear'  }}
        run: |
          bash scripts/travis/${{ matrix.stage }}.sh

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: >
      ((!contains(github.event.head_commit.message, '[skip tests]')
      && inputs.commitMessage != '[skip tests]') || (contains(github.event.head_commit.message, '[delete env]') ||
      inputs.commitMessage == '[delete env]'))
      &&
      ((contains(github.event.head_commit.message, '[create env]') ||
      inputs.commitMessage == '[create env]'))
      &&
      ((!contains(github.event.head_commit.message, '[force]')
      && inputs.commitMessage != '[force]'))
      &&
      (github.event.repository.fork==false)
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.34.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.34.0
      - uses: azure/setup-kubectl@v2.0
      - name: "Configure AWS credentials for Cluster"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACS_CLUSTER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACS_CLUSTER_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: "Init"
        run: bash scripts/travis/init.sh
      - name: show namespaces statuses
        run: kubectl get all --all-namespaces
      - name: "Deploy on K8s"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: bash scripts/travis/deploy_k8s.sh

  test:
    runs-on: ubuntu-latest
    needs: build
    if: >
      !contains(github.event.head_commit.message, '[skip tests]') &&
      inputs.commitMessage != '[skip tests]' &&
      !contains(github.event.head_commit.message, '[force]') &&
      inputs.commitMessage != '[force]'
      &&
      github.event.repository.fork==false
    strategy:
      fail-fast: false
      matrix:
        test: [ user, user-and-site-dashboard, admin-tools, content-actions, content-filters  ]
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.34.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.34.0
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: "Init"
        run: bash scripts/travis/init.sh
      - name:  "Prepare before Test"
        run: |
          pip3 install requests pytest==6.2.4 pytest-testinfra==6.3.0 jmespath==0.10.0
      - name: Build Docker image
        run: |
          export TAG_NAME="latest"
          bash scripts/travis/create_swap.sh "5"
          bash scripts/travis/build.sh
      - name: Start Alfresco
        run: bash amps/ags/travis/scripts/startAlfresco.sh packaging/docker/docker-compose
      - name: Wait for Alfresco to start
        run: |
          bash amps/ags/travis/scripts/waitForAlfrescoToStart.sh
          sudo free -m -t
      - name: Run ${{ matrix.test }} Test
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
          max_attempts: 3
          retry_wait_seconds: 60
          retry_on: error
          command: sudo --preserve-env bash scripts/travis/execute_share_web_docker.sh "${{ matrix.test }}-tests.xml"
      - name: "Upload artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.test }}-tests
          path: alfresco-tas-share-test/target/surefire-reports alfresco-tas-share-test/target/reports
          target-path: share/${{ env.GITHUB_RUN_NUMBER }}/content-actions-tests

  community_shared_UI_configuration:
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.head_commit.message, '[skip tests]') &&
      inputs.commitMessage != '[skip tests]' &&
      !contains(github.event.head_commit.message, '[force]') &&
      inputs.commitMessage != '[force]'
      &&
      github.event.repository.fork == false
      &&
      (!contains(github.event.head_commit.message, '[skip ags]') &&
      inputs.commitMessage != '[skip ags]')
      &&
      (contains(github.event.head_commit.message, '[community ags]') ||
      inputs.commitMessage == '[community ags]')
    needs: build
    strategy:
      fail-fast: false
      matrix:
        test: [communitySmokeRMSite, communityLevel2Tests, communityL2AuditRulesDashboardNodeBrowserTests]
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.34.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.34.0
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: "Init"
        run: bash scripts/travis/init.sh
      - name: "Prepare before Test"
        run: |
          pip3 install requests pytest==6.2.4 pytest-testinfra==6.3.0 jmespath==0.10.0
      - name: Build Docker image
        run: |
          export TAG_NAME="latest"
          bash scripts/travis/create_swap.sh "5"
          bash scripts/travis/build.sh
      - name: Tag Docker image
        run: |
          docker images
          docker image tag alfresco/alfresco-governance-repository-community-base:$(docker images | grep '^alfresco/alfresco-governance-repository-community-base ' | head -1 | awk '{print $2}') alfresco/alfresco-governance-repository-community-base:latest
          docker images
      - name: "Install Firefox 43.0.1"
        run: |
          sudo apt-get install libgtk2.0-0
          wget https://ftp.mozilla.org/pub/firefox/releases/43.0.1/linux-x86_64/en-GB/firefox-43.0.1.tar.bz2
          tar xvf firefox-43.0.1.tar.bz2
          sudo rm -rf /opt/firefox*
          sudo mv firefox /opt/firefox
          sudo ln -sf /opt/firefox/firefox /usr/bin/firefox
          export PATH=/opt/firefox/firefox:$PATH
          firefox --version
      - name: Start Alfresco
        run: |
          bash amps/ags/travis/scripts/startAlfresco.sh amps/ags/rm-community/rm-community-share
          bash amps/ags/travis/scripts/waitForAlfrescoToStart.sh
          sudo free -m -t
      - name: Run tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
          max_attempts: 3
          retry_wait_seconds: 60
          retry_on: error
          command: xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -pl :alfresco-governance-services-automation-ui -Pags -Dskip.automationtests=false -DsuiteXmlFile=${{ matrix.test }}.xml -Dshare.url=$SHARE_URL -Dalfresco.url=$ALFRESCO_URL $WEBDRIVER_ARGUMENTS
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ags/${GITHUB_RUN_NUMBER}/${JOB_NAME}
          path:
            amps/ags/rm-automation/rm-automation-ui/target/surefire-reports
            amps/ags/rm-automation/rm-automation-ui/target/reports
            amps/ags/rm-automation/rm-automation-ui/target/screenshots
            alfresco.log
            solr.log
            share.log
      - name: Get logs
        run: bash amps/ags/scripts/getLogs.sh

  enterprise_shared_UI_configuration:
    runs-on: ubuntu-latest
    if: >
      (!contains(github.event.head_commit.message, '[skip tests]') &&
      inputs.commitMessage != '[skip tests]') &&
      (!contains(github.event.head_commit.message, '[force]') &&
      inputs.commitMessage != '[force]')
      &&
      (github.event.repository.fork==false)
      &&
      (((github.ref_name == 'master' || startsWith(github.ref_name, 'release/')) &&
      (!contains(github.event.head_commit.message, '[skip ags]')
      && inputs.commitMessage != '[skip ags]')) || (contains(github.event.head_commit.message, '[ags]')
      || inputs.commitMessage == '[ags]'))
      ||
      (github.event_name == 'pull_request' && (github.base_ref == 'master' || startsWith(github.base_ref, 'release/')))
    needs: build
    strategy:
      fail-fast: false
      matrix:
        test: [communityLevel2Tests, communityL2AuditRulesDashboardNodeBrowserTests, enterpriseLevel2Tests, enterpriseLevel2ClassificationTests, enterpriseRecordsClassificationTests, enterpriseFoldersClassificationTests, enterpriseDocumentsClassificationTests, enterpriseSecurityMarksTests, enterpriseConsoleGuidesAndConfiguration, wormTestSuite]
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.34.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.34.0
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: "Init"
        run: bash scripts/travis/init.sh
      - name: "Prepare before Test"
        run: |
          pip3 install requests pytest==6.2.4 pytest-testinfra==6.3.0 jmespath==0.10.0
      - name: "Install Firefox 43.0.1"
        run: |
          sudo apt-get install libgtk2.0-0
          wget https://ftp.mozilla.org/pub/firefox/releases/43.0.1/linux-x86_64/en-GB/firefox-43.0.1.tar.bz2
          tar xvf firefox-43.0.1.tar.bz2
          sudo rm -rf /opt/firefox*
          sudo mv firefox /opt/firefox
          sudo ln -sf /opt/firefox/firefox /usr/bin/firefox
          export PATH=/opt/firefox/firefox:$PATH
          firefox --version
      - name: Set S3_BUCKET_NAME
        env:
          VERSION: ${{ github.run_number }}
        run: |
          echo "S3_BUCKET_NAME=travis-ags-$VERSION" >> $GITHUB_ENV
          echo $S3_BUCKET_NAME
      - name: Build Docker image
        run: |
          firefox --version
          echo $S3_BUCKET_NAME
          export TAG_NAME="latest"
          bash scripts/travis/create_swap.sh "5"
          bash scripts/travis/build.sh
      - name: Tag Docker image
        run: |
          docker images
          docker image tag alfresco/alfresco-governance-repository-enterprise-base:$(docker images | grep '^alfresco/alfresco-governance-repository-enterprise-base ' | head -1 | awk '{print $2}') alfresco/alfresco-governance-repository-enterprise-base:latest
          docker images
      - name: Start Alfresco
        if: ${{ matrix.test != 'wormTestSuite'}}
        run: |
          bash amps/ags/travis/scripts/startAlfresco.sh amps/ags/rm-enterprise/rm-enterprise-share
          bash amps/ags/travis/scripts/waitForAlfrescoToStart.sh
      - name: Start Alfresco for Worm
        if: ${{ matrix.test == 'wormTestSuite'}}
        run: |
          bash amps/ags/travis/scripts/create-worm-bucket.sh
          bash amps/ags/travis/scripts/start-compose.sh amps/ags/rm-enterprise/rm-enterprise-share/docker-compose-worm-support-ui.yml
          bash amps/ags/travis/scripts/waitForAlfrescoToStart.sh
          sudo free -m -t
      - name: Run tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
          max_attempts: 3
          retry_wait_seconds: 60
          retry_on: error
          command: xvfb-run --server-args="-screen 0 1920x1080x24" mvn -B test -pl :alfresco-governance-services-automation-ui -Pags -Dskip.automationtests=false -DsuiteXmlFile=${{ matrix.test }}.xml -Dshare.url=$SHARE_URL -Dalfresco.url=$ALFRESCO_URL $WEBDRIVER_ARGUMENTS
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ags/${GITHUB_RUN_NUMBER}/${JOB_NAME}
          path:
            amps/ags/rm-automation/rm-automation-ui/target/surefire-reports
            amps/ags/rm-automation/rm-automation-ui/target/reports
            amps/ags/rm-automation/rm-automation-ui/target/screenshots
            alfresco.log
            solr.log
            share.log
      - name: Get logs
        run: bash amps/ags/travis/scripts/getLogs.sh

  teardown:
    runs-on: ubuntu-latest
    needs: test
    if: >
      ((!contains(github.event.head_commit.message, '[skip tests]')
      && inputs.commitMessage != '[skip tests]') || (contains(github.event.head_commit.message, '[delete env]') ||
      inputs.commitMessage == '[delete env]'))
      &&
      ((contains(github.event.head_commit.message, '[create env]') ||
      inputs.commitMessage == '[create env]'))
      &&
      ((!contains(github.event.head_commit.message, '[force]')
      && inputs.commitMessage != '[force]'))
      &&
      github.event.repository.fork == false
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.34.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.34.0
      - uses: azure/setup-kubectl@v2.0
      - name: "Configure AWS credentials for Cluster"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACS_CLUSTER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACS_CLUSTER_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: "Init"
        run: bash scripts/travis/init.sh
      - name: Delete Enviornment
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: bash scripts/travis/delete-env.sh
