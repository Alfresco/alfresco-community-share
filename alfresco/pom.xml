<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>alfresco</artifactId>
    <name>Alfresco Repository with Share Services AMP</name>
    <packaging>war</packaging>

    <parent>
        <artifactId>alfresco-share-parent</artifactId>
        <groupId>org.alfresco</groupId>
        <version>5.1-SIMP1-SNAPSHOT</version>
    </parent>

    <properties>
        <!-- Developer's runtime environment configuration -->
        <runtime.parent.folder>${basedir}/..</runtime.parent.folder>
    </properties>

    <dependencies>
        <!-- Defines WAR to overlay -->
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-platform</artifactId>
            <version>${alfresco.platform.version}</version>
            <!-- <classifier>nossl</classifier> -->
            <type>war</type>
            <scope>runtime</scope>
        </dependency>

        <!-- share-services AMP -->
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-share-services</artifactId>
            <version>${project.version}</version>
            <type>amp</type>
        </dependency>
    </dependencies>

    <build>
        <finalName>alfresco</finalName>

        <plugins> 
            <!-- Configure war overlay without exclusions, so that we get the MANIFEST.MF, which MMT needs -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <overlays>
                        <overlay>
                            <groupId>org.alfresco</groupId>
                            <artifactId>alfresco-platform</artifactId>
                            <!-- <classifier>nossl</classifier> -->
                            <excludes/>
                        </overlay>
                        <overlay>
                            <groupId>org.alfresco</groupId>
                            <artifactId>alfresco-share-services</artifactId>
                            <type>amp</type>
                        </overlay>
                    </overlays>
                </configuration>
                <!-- This allows overlays to be prepared on the FS for minification and faster run -->
                <executions>
                    <execution>
                        <id>prepare-exploded-war</id>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <!-- Additional execution to generate a non-ssl war -->
                    <execution>
                        <id>nossl-war</id>
                        <goals>
                            <goal>war</goal>
                        </goals>
                        <configuration>
                            <classifier>nossl</classifier>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-war</id>
                        <goals>
                            <goal>war</goal>
                        </goals>
                        <configuration>
                            <webappDirectory>${project.build.directory}/${project.build.finalName}-ssl</webappDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-webapp-for-ssl</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}-ssl</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/${project.build.finalName}</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- NonSSL war: Replaces web.xml where applicable, commenting out the security-constraints -->
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <id>disable-securecomms</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <file>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</file>
                    <replacements>
                        <replacement>
                            <token><![CDATA[<!-- Toggle securecomms placeholder start -->]]></token>
                            <value><![CDATA[<!-- ]]></value>
                        </replacement>
                        <replacement>
                            <token><![CDATA[<!-- Toggle securecomms placeholder end -->]]></token>
                            <value><![CDATA[--> ]]></value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>

            <!--
                Configure the Tomcat plugin. Keeping the configuration separate from the 'run' profile,
                allows explicit running of tomcat, e.g: mvn tomcat7:run-war-only
            -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <dir.root>${dir.root}</dir.root>
                        <index.subsystem.name>solr4</index.subsystem.name>
                        <solr.host>localhost</solr.host>
                        <solr.secureComms>none</solr.secureComms>
                        <solr.port>8080</solr.port>
                        <solr.port.ssl></solr.port.ssl>
                        <solr.backup.alfresco.numberToKeep>0</solr.backup.alfresco.numberToKeep>
                        <solr.backup.archive.numberToKeep>0</solr.backup.archive.numberToKeep>
                        <solr.solr.home>${runtime.solr.folder}</solr.solr.home>
                        <solr.solr.model.dir>${runtime.solr.folder}/alfrescoModels</solr.solr.model.dir>
                        <solr.solr.content.dir>${runtime.solr.folder}/content</solr.solr.content.dir>
                    </systemProperties>
                    <delegate>false</delegate>
                    <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
                    <contextFile>${runtime.tomcat.conf.folder}/alfresco-context.xml</contextFile>
                    <tomcatUsers>${runtime.tomcat.conf.folder}/tomcat-users.xml</tomcatUsers>
                    <webapps>
                        <!-- Run solr4 alongside the repo -->
                        <webapp>
                            <groupId>org.alfresco</groupId>
                            <artifactId>alfresco-solr4</artifactId>
                            <version>${alfresco.platform.version}</version>
                            <contextPath>/solr4</contextPath>
                            <type>war</type>
                            <asWebapp>true</asWebapp>
                            <contextFile>${runtime.tomcat.conf.folder}/solr-context.xml</contextFile>
                        </webapp>
                    </webapps> 
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
